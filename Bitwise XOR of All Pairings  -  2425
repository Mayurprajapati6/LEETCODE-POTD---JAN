-------- APPROACH -> 1 ( BRUTE FORCE) (TLE) -----------
// TC = O(N * M)
// SC = O(1)
class Solution {
public:
    int xorAllNums(vector<int>& nums1, vector<int>& nums2) {

        // int n = nums1.size();
        int m = nums2.size();

        int final_xor = 0;
        
        for(int i=0;i<n;i++) {
             for(int j=0;j<m;j++) {
                 int curr_xor = 0;
                 curr_xor = nums1[i] ^ nums2[j];
                 final_xor = final_xor ^ curr_xor;
                
             }
       }

        return final_xor;
    }
};

-------------------------------------------------------------------------------- xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx -----------------------------------------------------------------

------ APPROACH-> 2
// TC = O(N)
// SC = O(N) (MAP IS USED)
class Solution {
public:
    int xorAllNums(vector<int>& nums1, vector<int>& nums2) {

        int m = nums1.size();
        int n = nums2.size();

        unordered_map<int,long>mpp;

        for(int &num: nums1) {
            mpp[num] += n;
        }

        for(int &num: nums2) {
            mpp[num] += m;
        }

        int final_xor = 0;
        for(auto &it: mpp) {
            int num = it.first;
            int freq = it.second;

            if(freq % 2 != 0) {
                final_xor ^= num;
            }
        }

        return final_xor;
    }
};
