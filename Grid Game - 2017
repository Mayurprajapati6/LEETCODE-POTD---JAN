-------------- APPROACH -> 1 ( using cummulative sum + game statergy ) ------------------------
class Solution {
public:
    // TC = O(Col)
    // SC = O(1)
    long long gridGame(vector<vector<int>>& grid) {
        int n = grid[0].size();

        long long firstRowRemainSum = accumulate(begin(grid[0]),end(grid[0]),0LL);

        long long secondRowRemainSum = 0;

        long long minimizedRobot2Sum = LONG_LONG_MAX;

        for(int robot1Col = 0 ; robot1Col < n ; robot1Col++) {
            firstRowRemainSum -= grid[0][robot1Col];

            long long bestOfRobot2 = max(firstRowRemainSum,secondRowRemainSum);

            minimizedRobot2Sum = min(minimizedRobot2Sum,bestOfRobot2);

            secondRowRemainSum += grid[1][robot1Col];
        }

        return minimizedRobot2Sum;
    }
};
